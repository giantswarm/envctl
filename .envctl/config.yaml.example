# envctl configuration file
# This file contains all the configuration for envctl including clusters, MCP servers, and port forwards
# By default, envctl has no k8s connections, no MCP servers, and no port forwarding enabled

# Clusters configuration - define your k8s clusters and their roles
clusters: []
  # Example management cluster for observability:
  # - name: mc-example
  #   context: gs-example
  #   role: observability
  #   displayName: "MC: example"
  #   icon: "üè¢"
  
  # Example management cluster as target (when no workload cluster):
  # - name: mc-example-target
  #   context: gs-example
  #   role: target
  #   displayName: "MC: example (target)"
  #   icon: "üéØ"
  
  # Example workload cluster as target:
  # - name: wc-myworkload
  #   context: gs-example-myworkload
  #   role: target
  #   displayName: "WC: myworkload"
  #   icon: "‚öôÔ∏è"

# Active clusters for each role
activeClusters: {}
  # Example:
  # observability: mc-example
  # target: mc-example-target

# Port forwarding configurations
portForwards: []
  # Example Prometheus port forward:
  # - name: mc-prometheus
  #   enabledByDefault: true
  #   clusterRole: observability  # Uses the active observability cluster
  #   namespace: mimir
  #   targetType: service
  #   targetName: mimir-query-frontend
  #   localPort: "8080"
  #   remotePort: "8080"
  #   icon: "üî•"
  #   category: "Monitoring"

  # Example Grafana port forward:
  # - name: mc-grafana
  #   enabledByDefault: true
  #   clusterRole: observability  # Uses the active observability cluster
  #   namespace: monitoring
  #   targetType: service
  #   targetName: grafana
  #   localPort: "3000"
  #   remotePort: "3000"
  #   icon: "üìä"
  #   category: "Monitoring"

  # Example Alloy metrics port forward:
  # - name: alloy-metrics
  #   enabledByDefault: true
  #   clusterRole: target  # Uses the active target cluster
  #   namespace: kube-system
  #   targetType: service
  #   targetName: alloy-metrics
  #   localPort: "12345"
  #   remotePort: "12345"
  #   icon: "üìà"
  #   category: "Metrics"

# MCP Server configurations
mcpServers: []
  # Example Teleport MCP server:
  # - name: teleport
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "üîå"
  #   category: "Core"
  #   command: ["node", "/home/teemow/projects/giantswarm/teleport-mcp/dist/index.js"]

  # Example Kubernetes MCP server:
  # - name: k8s
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "‚ò∏"
  #   category: "Core"
  #   command: ["npx", "mcp-server-kubernetes"]
  #   requiresClusterRole: target  # Uses the active target cluster

  # Example CAPI MCP server:
  # - name: capi
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "‚ò∏"
  #   category: "Core"
  #   command: ["mcp-capi"]
  #   requiresClusterRole: target  # Uses the active target cluster

  # Example Giant Swarm Apps MCP server:
  # - name: app
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "‚ò∏"
  #   category: "Core"
  #   command: ["mcp-giantswarm-apps"]
  #   requiresClusterRole: target  # Uses the active target cluster

  # Example Flux MCP server:
  # - name: flux
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "‚ò∏"
  #   category: "Core"
  #   command: ["flux-operator-mcp", "serve"]
  #   env:
  #     KUBECONFIG: "/home/teemow/.kube/config"
  #   requiresClusterRole: target  # Uses the active target cluster

  # Example Prometheus MCP server:
  # - name: prometheus
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "üî•"
  #   category: "Monitoring"
  #   command: ["uv", "--directory", "/home/teemow/projects/prometheus-mcp-server", "run", "src/prometheus_mcp_server/main.py"]
  #   env:
  #     PROMETHEUS_URL: "http://localhost:8080/prometheus"
  #     ORG_ID: "giantswarm"
  #   requiresPortForwards: ["mc-prometheus"]

  # Example Grafana MCP server:
  # - name: grafana
  #   type: localCommand
  #   enabledByDefault: true
  #   icon: "üìä"
  #   category: "Monitoring"
  #   command: ["mcp-grafana"]
  #   env:
  #     GRAFANA_URL: "http://localhost:3000"
  #   requiresPortForwards: ["mc-grafana"]

# Global settings
globalSettings:
  defaultContainerRuntime: docker

# Aggregator configuration
aggregator:
  port: 8090
  host: localhost
  enabled: false  # Disabled by default when no MCP servers
  # envctlPrefix: "x"

# Workflows (if any)
workflows: [] 