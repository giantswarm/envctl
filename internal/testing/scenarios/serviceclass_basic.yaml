name: "serviceclass-basic-operations"
category: "behavioral"
concept: "serviceclass"
description: "Basic ServiceClass management operations - create, list, get, delete"
tags: ["basic", "crud", "serviceclass"]
timeout: "5m"

steps:
  - id: "list-initial-serviceclasses"
    description: "Get initial list of ServiceClasses to establish baseline"
    tool: "core_serviceclass_list"
    args: {}
    expected:
      success: true
    timeout: "30s"

  - id: "create-test-serviceclass"
    description: "Create a new test ServiceClass with basic configuration"
    tool: "core_serviceclass_create"
    args:
      yaml: |
        name: test-basic-serviceclass
        type: "basic"
        version: "1.0.0"
        description: "Test ServiceClass for behavioral testing"
        parameters:
          replicas:
            type: integer
            default: 1
            description: "Number of service replicas"
          image:
            type: string
            required: true
            description: "Container image to use"
        serviceConfig:
          lifecycleTools:
            start:
              tool: "core_service_create"
              description: "Create service instance"
            stop:
              tool: "core_service_delete"
              description: "Delete service instance"
        template: |
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: "{{ .name }}-config"
          data:
            replicas: "{{ .parameters.replicas }}"
            image: "{{ .parameters.image }}"
    expected:
      success: true
      contains: ["test-basic-serviceclass"]
    timeout: "1m"

  - id: "verify-serviceclass-created"
    description: "Verify the ServiceClass was created and is available"
    tool: "core_serviceclass_get"
    args:
      name: "test-basic-serviceclass"
    expected:
      success: true
      contains: ["test-basic-serviceclass", "Test ServiceClass for behavioral testing"]
    timeout: "30s"

  - id: "check-serviceclass-availability"
    description: "Check if the ServiceClass is available for instantiation"
    tool: "core_serviceclass_available"
    args:
      name: "test-basic-serviceclass"
    expected:
      success: true
      json_path:
        available: true
    timeout: "30s"

  - id: "list-serviceclasses-with-new"
    description: "List ServiceClasses to verify our new one appears"
    tool: "core_serviceclass_list"
    args: {}
    expected:
      success: true
      contains: ["test-basic-serviceclass"]
    timeout: "30s"

cleanup:
  - id: "delete-test-serviceclass"
    description: "Clean up by deleting the test ServiceClass"
    tool: "core_serviceclass_delete"
    args:
      name: "test-basic-serviceclass"
    expected:
      success: true
      contains: ["test-basic-serviceclass"]
    timeout: "30s"

  - id: "verify-serviceclass-deleted"
    description: "Verify the ServiceClass was completely removed"
    tool: "core_serviceclass_get"
    args:
      name: "test-basic-serviceclass"
    expected:
      success: false
      contains: ["not found"]
    timeout: "30s" 